#!/bin/bash -l

# -l flag to run locally

#SBATCH -J scaling-mpi
#SBATCH -o scaling-mpi.%j.stdout
#SBATCH -e scaling-mpi.%j.error

#SBATCH -t 00:30:00
#SBATCH -N 2
#SBATCH -C haswell
#SBATCH -A m2218
#SBATCH -p debug

printf "%s\n" "OpenMP,MPI,n,iterations,t (s),V" > scaling-hybrid.csv

if [[ $NERSC_HOST == "cori" && "$1" != "-l" ]]; then
    # change this to 1 for test job
    iterations=100
    nBase=20000
    # without hyper-threading
    process=2
    thread=32
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=4
    thread=16
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=8
    thread=8
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=16
    thread=4
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=32
    thread=2
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=64
    thread=1
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    # with hyper-threading
    process=2
    thread=64
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=4
    thread=32
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=8
    thread=16
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=16
    thread=8
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=32
    thread=4
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=64
    thread=2
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=128
    thread=1
    OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
else
    iterations=1
    nBase=20000
    # without hyper-threading
    process=1
    thread=4
    OMP_NUM_THREADS=$thread mpirun -n $process ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=2
    thread=2
    OMP_NUM_THREADS=$thread mpirun -n $process ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=4
    thread=1
    OMP_NUM_THREADS=$thread mpirun -n $process ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    # with hyper-threading
    process=1
    thread=8
    OMP_NUM_THREADS=$thread mpirun -n $process ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=2
    thread=4
    OMP_NUM_THREADS=$thread mpirun -n $process ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=4
    thread=2
    OMP_NUM_THREADS=$thread mpirun -n $process ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    process=8
    thread=1
    OMP_NUM_THREADS=$thread mpirun -n $process ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
fi
