#!/bin/bash -l

# -l flag to run locally

#SBATCH -J scaling-mpi
#SBATCH -o scaling-mpi.%j.stdout
#SBATCH -e scaling-mpi.%j.error

#SBATCH -t 00:30:00
#SBATCH -N 2
#SBATCH -C haswell
#SBATCH -A m2218
#SBATCH -p debug

printf "%s\n" "OpenMP,MPI,n,iterations,t (s),V" > scaling-hybrid.csv

if [[ $NERSC_HOST == "cori" && "$1" != "-l" ]]; then
    # change this to 1 for test job
    iterations=100
    nBase=20000
    # without hyper-threading
    total=64
    for process in 2 4 8 16 32 64; do
        thread=$((total/process))
        OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    done
    # with hyper-threading
    total=128
    for process in 2 4 8 16 32 64 128; do
        thread=$((total/process))
        OMP_NUM_THREADS=$thread srun -N 2 -n $process -c $thread ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    done
else
    iterations=1
    nBase=20000
    # without hyper-threading
    total=4
    for process in 1 2 4; do
        thread=$((total/process))
        OMP_NUM_THREADS=$thread mpirun -n $process ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    done
    # with hyper-threading
    total=8
    for process in 1 2 4 8; do
        thread=$((total/process))
        OMP_NUM_THREADS=$thread mpirun -n $process ./thomson-problem-1d -n $nBase -t $iterations -o scaling-hybrid.csv
    done
fi
